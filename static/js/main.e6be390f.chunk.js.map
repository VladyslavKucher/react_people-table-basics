{"version":3,"sources":["Page.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","pages/People.tsx","pages/PeoplePage.tsx","pages/ErrorPage.tsx","App.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","Page","className","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","ERROR","People","selectedPerson","useState","NONE","error","setError","people","setPeople","isLoading","setIsLoading","findParent","person","parent","motherName","find","p","name","fatherName","useEffect","fetchData","res","length","EMPTYARRAY","OTHERERROR","map","mother","father","sex","born","died","slug","PeoplePage","useParams","ErrorPage","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e6be390f.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const Page = () => (\n  <div data-cy=\"app\">\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>Home</NavLink>\n          <NavLink to=\"/people\" className={getLinkClass}>People</NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Loader } from '../components/Loader';\n\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\ntype Props = {\n  selectedPerson: string | null,\n};\n\nenum ERROR {\n  NONE,\n  EMPTYARRAY,\n  OTHERERROR,\n}\n\nexport const People: React.FC<Props> = ({ selectedPerson }) => {\n  const [error, setError] = useState<ERROR>(ERROR.NONE);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const findParent = (person: Person, parent: string) => {\n    if (parent === 'f' && person.motherName) {\n      return people.find((p) => p.name === person.motherName);\n    }\n\n    if (parent === 'm' && person.fatherName) {\n      return people.find((p) => p.name === person.fatherName);\n    }\n\n    return undefined;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const res = await getPeople();\n\n        if (res.length) {\n          setPeople(res);\n        } else {\n          setError(ERROR.EMPTYARRAY);\n        }\n      } catch (err) {\n        setError(ERROR.OTHERERROR);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              {error === ERROR.OTHERERROR && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              {error === ERROR.EMPTYARRAY && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              <tbody>\n\n                {people.map(person => {\n                  const mother = findParent(person, 'f');\n                  const father = findParent(person, 'm');\n                  const {\n                    name,\n                    sex,\n                    born,\n                    died,\n                    fatherName,\n                    motherName,\n                    slug,\n                  } = person;\n\n                  return (\n                    <tr\n                      data-cy=\"person\"\n                      key={slug}\n                      className={classNames({\n                        'has-background-warning': selectedPerson === slug,\n                      })}\n                    >\n                      <td>\n                        <Link\n                          to={`${slug}`}\n                          className={classNames({\n                            'has-text-danger': sex === 'f',\n                          })}\n                        >\n                          {name}\n                        </Link>\n                      </td>\n\n                      <td>{sex}</td>\n                      <td>{born}</td>\n                      <td>{died}</td>\n\n                      {mother ? (\n                        <td>\n                          <Link\n                            to={`${mother.slug}`}\n                            className=\"has-text-danger\"\n                          >\n                            {motherName}\n                          </Link>\n                        </td>\n                      ) : (\n                        <td>{motherName || '-'}</td>\n                      )}\n\n                      {father ? (\n                        <td>\n                          <Link\n                            to={`${father.slug}`}\n                          >\n                            {fatherName}\n                          </Link>\n                        </td>\n                      ) : (\n                        <td>{fatherName || '-'}</td>\n                      )}\n\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { People } from './People';\n\nexport const PeoplePage: React.FC = () => {\n  const { selectedPerson } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <People selectedPerson={selectedPerson as string} />\n    </>\n  );\n};\n","export const ErrorPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { Page } from './Page';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { ErrorPage } from './pages/ErrorPage';\n\nexport const App = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<Page />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":selectedPerson\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <App />,\n  );\n"],"sourceRoot":""}